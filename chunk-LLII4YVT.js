import{P as p,U as c,pc as l,tc as s}from"./chunk-4CFQG3UO.js";var a=class extends Error{};a.prototype.name="InvalidTokenError";function u(t){return decodeURIComponent(atob(t).replace(/(.)/g,(e,r)=>{let o=r.charCodeAt(0).toString(16).toUpperCase();return o.length<2&&(o="0"+o),"%"+o}))}function f(t){let e=t.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return u(e)}catch{return atob(e)}}function d(t,e){if(typeof t!="string")throw new a("Invalid token specified: must be a string");e||(e={});let r=e.header===!0?0:1,o=t.split(".")[r];if(typeof o!="string")throw new a(`Invalid token specified: missing part #${r+1}`);let i;try{i=f(o)}catch(n){throw new a(`Invalid token specified: invalid base64 for part #${r+1} (${n.message})`)}try{return JSON.parse(i)}catch(n){throw new a(`Invalid token specified: invalid json for part #${r+1} (${n.message})`)}}var b=class t{constructor(e){this._HttpClient=e}userInfo;decodeUserToken(){sessionStorage.getItem("token")&&(this.userInfo=d(sessionStorage.getItem("token")))}signUp(e){return this._HttpClient.post(`${s.baseUrl}/api/v1/auth/signup`,e)}signIn(e){return this._HttpClient.post(`${s.baseUrl}/api/v1/auth/signin`,e)}ForgotPassword(e){return this._HttpClient.post(`${s.baseUrl}/api/v1/auth/forgotPasswords`,{email:e})}VerifyResetCode(e){return this._HttpClient.post(`${s.baseUrl}/api/v1/auth/verifyResetCode`,{resetCode:e})}UpdateLoggedUserPassword(e){return this._HttpClient.put(`${s.baseUrl}/api/v1/users/changeMyPassword`,e,{headers:this.userInfo})}ResetPassword(e){return this._HttpClient.put(`${s.baseUrl}/api/v1/auth/resetPassword`,e)}UpdateLoggeduserdata(e){return this._HttpClient.put(`${s.baseUrl}/api/v1/users/updateMe/`,e,{headers:this.userInfo})}static \u0275fac=function(r){return new(r||t)(c(l))};static \u0275prov=p({token:t,factory:t.\u0275fac,providedIn:"root"})};export{b as a};
